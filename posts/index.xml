<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on 我的博客</title>
    <link>https://zwlzls.github.io/posts/</link>
    <description>Recent content in Posts on 我的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 07 Jan 2025 23:41:00 +0800</lastBuildDate><atom:link href="https://zwlzls.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Git01</title>
      <link>https://zwlzls.github.io/posts/git01/</link>
      <pubDate>Tue, 07 Jan 2025 23:41:00 +0800</pubDate>
      
      <guid>https://zwlzls.github.io/posts/git01/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Python00</title>
      <link>https://zwlzls.github.io/posts/python00/</link>
      <pubDate>Tue, 07 Jan 2025 22:12:38 +0800</pubDate>
      
      <guid>https://zwlzls.github.io/posts/python00/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Java00</title>
      <link>https://zwlzls.github.io/posts/java00/</link>
      <pubDate>Tue, 07 Jan 2025 22:12:22 +0800</pubDate>
      
      <guid>https://zwlzls.github.io/posts/java00/</guid>
      <description></description>
    </item>
    
    <item>
      <title>SQL00</title>
      <link>https://zwlzls.github.io/posts/sql00/</link>
      <pubDate>Tue, 07 Jan 2025 22:12:09 +0800</pubDate>
      
      <guid>https://zwlzls.github.io/posts/sql00/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Linux01(命令)</title>
      <link>https://zwlzls.github.io/posts/linux01/</link>
      <pubDate>Sun, 05 Jan 2025 15:10:55 +0800</pubDate>
      
      <guid>https://zwlzls.github.io/posts/linux01/</guid>
      <description>常用命令记录 帮助 man man cp 查看 cp 命令的帮助手册 man -f cp 查看 cp 命令的简要信息 man -w cp 查看 cp 命令帮助手册文件所在位置 man -k cp 搜索跟 cp 相关的帮助手册 whatis whatis cp 查询 cp 命令的功能 info：阅读info格式文件 info ls 查看ls命令的info文档 info -w ls 显示ls命令info文档的物理位置 磁盘与文件系统 du : 查看磁盘使用空间 du 列出当前目录下所有文件和目录的容量大小 du -h dir 以易读方式显示 dir 文件夹及其子文件夹大小 du -ah dir 以易读方式显示 dir 文件夹内所有文件大小 du f.txt 显示文件 f.txt 所占用的磁盘空间 du -s dir 仅显示目录的总大小 df : 显示磁盘空间使用情况 df 显示磁盘空间使用情况 df /home 显示指定文件/目录所在分区的磁盘使用情况 df -i 以 inode 模式来显示磁盘使用情况 inode ： 文件数据都储存在&amp;quot;块&amp;quot;中，还必须找到一个地方储存文件的元信息，储存文件元信息的区域就叫做inode，中文 “索引节点” sync : 强制将更改内容立刻写入磁盘 sync 所有挂载的文件系统的缓存数据写入磁盘 sync /path/to/file 同步指定文件的数据到磁盘 mount : 把文件系统过载到目录 mount 查看当前系统中挂载的所有文件系统信息 mount -t tmpfs 查看指定类型挂载的文件系统 sudo mount -o ro /dev/sdb/udisk 只读模式挂载 unmount : 卸载文件系统 umount -v /media/ALVIN/ 通过挂载点卸载 dd : 拷贝及转换文件(if=input file,of=output file,conv=conversion) dd if=/dev/one of=ﬁle.</description>
    </item>
    
    <item>
      <title>Git00</title>
      <link>https://zwlzls.github.io/posts/git00/</link>
      <pubDate>Sun, 05 Jan 2025 15:03:12 +0800</pubDate>
      
      <guid>https://zwlzls.github.io/posts/git00/</guid>
      <description>git基本操作 由于学习更偏重点性记录或自己使用角度，深入度可能不足，详细见https://gitee.com/progit/index.html
安装及配置 ：Git · Pro Git 第二版 简体中文
起步 版本控制 ： 记录一个或若干文件内容变化，以便将来查阅特定版本修订情况的系统
本地版本控制
eg : RCS工作原理是在硬盘上保存补丁集（补丁是指文件修订前后的变化）；通过应用所有的补丁，可以重新计算出各个版本的文件内容。 集中版本控制 : 不同系统上的开发者协同工作
有一个单一的集中管理的服务器，保存所有文件的修订版本，而协同工作的人们都通过客户端连到这台服务器，取出最新的文件或者提交更新 优点 ： 每个人都可以在一定程度上看到项目中的其他人正在做些什么。 而管理员也可以轻松掌控每个开发者的权限 缺点 ： 中央服务器的单点故障，只有单独快照 分布式版本控制
客户端并不只提取最新版本的文件快照，而是把代码仓库完整地镜像下来 git基础
Git 是把数据看作是对小型文件系统的一组快照。 每次提交更新，或在 Git 中保存项目状态时，主要对当时的全部文件制作一个快照并保存这个快照的索引。 如果文件没有修改，Git 不再重新存储该文件，而是只保留一个链接指向之前存储的文件。 Git 对待数据更像是一个 快照流 Git 中的绝大多数操作都只需要访问本地文件和资源，一般不需要来自网络上其它计算机的信息 Git 中所有数据在存储前都计算校验和，然后以校验和来引用。 这意味着不可能在 Git 不知情时更改任何文件内容或目录内容 计算校验和的机制叫做 SHA-1 散列（hash，哈希）。 这是一个由 40 个十六进制字符（0-9 和 a-f）组成字符串，基于 Git 中文件的内容或目录结构计算出来 实际上，Git 数据库中保存的信息都是以文件内容的哈希值来索引，而不是文件名 执行的 Git 操作，几乎只往 Git 数据库中增加数据 三种状态 已提交表示数据已经安全的保存在本地数据库中 已修改表示修改了文件，但还没保存到数据库中 已暂存表示对一个已修改文件的当前版本做了标记，使之包含在下次提交的快照中 由此 三个工作区 Git 仓库目录是 Git 用来保存项目的元数据和对象数据库的地方(github) 工作目录是对项目的某个版本独立提取出来的内容(本地仓库) 暂存区域是一个文件，保存了下次将提交的文件列表信息，一般在 Git 仓库目录中。称作索引 基本Git工作流程 在工作目录中修改文件 暂存文件，将文件的快照放入暂存区域 提交更新，找到暂存区域的文件，将快照永久性存储到 Git 仓库目录 Git基础 获取Git仓库</description>
    </item>
    
    <item>
      <title>Linux00</title>
      <link>https://zwlzls.github.io/posts/linux00/</link>
      <pubDate>Sun, 05 Jan 2025 14:51:29 +0800</pubDate>
      
      <guid>https://zwlzls.github.io/posts/linux00/</guid>
      <description>Linux00 磁盘与目录树结构 linux 下所有的数据都是以文件的形态来呈现的，所以最重要的就是目录树架构 挂载 就是利用一个目录当成进入点，将磁盘分区槽的数据放置在该目录下 文件权限与目录配置 Linux 最优秀的就是多人任务，文件权限就很重要，将文件的可存取身份分为： owner、group、ohters，且都有 read、write、execute 等权限。
Linux系统里面账户，密码，群组目录
/etc/passwd：账户信息 /etc/shadow：账户密码，不过是加密了的 /etc/group：所有组名 </description>
    </item>
    
  </channel>
</rss>
